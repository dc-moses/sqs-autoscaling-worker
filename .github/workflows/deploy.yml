name: Deploy SQS Worker

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      LAMBDA_NAME: sqs-worker-lambda

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-ci-role
          aws-region: us-east-1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install boto3

      - name: Deploy CloudFormation stack
        run: python3 deploy.py

      - name: Deploy or Create Lambda function
        run: |
          zip lambda.zip lambda_trigger.py
          if aws lambda get-function --function-name $LAMBDA_NAME > /dev/null 2>&1; then
            aws lambda update-function-code \
              --function-name $LAMBDA_NAME \
              --zip-file fileb://lambda.zip
          else
            aws lambda create-function \
              --function-name $LAMBDA_NAME \
              --runtime python3.10 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-ci-role \
              --handler lambda_trigger.lambda_handler \
              --zip-file fileb://lambda.zip \
              --environment Variables={QUEUE_URL=dummy-to-be-updated}
          fi

      - name: Update Lambda environment with real queue URL
        run: |
          QUEUE_URL=$(aws cloudformation describe-stacks \
            --stack-name SQSWorkerStack \
            --query "Stacks[0].Outputs[?OutputKey=='SQSQueueURL'].OutputValue" \
            --output text)
          aws lambda update-function-configuration \
            --function-name $LAMBDA_NAME \
            --environment Variables="{\"QUEUE_URL\":\"$QUEUE_URL\"}"

      - name: Deploy API Gateway
        run: |
          sed -i "s/YourLambdaFunctionName/$LAMBDA_NAME/g" deploy_api_gateway.py
          python3 deploy_api_gateway.py

  destroy:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: deploy

    env:
      LAMBDA_NAME: sqs-worker-lambda

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-ci-role
          aws-region: us-east-1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install boto3

      - name: Destroy stack and clean up
        run: python3 destroy.py
