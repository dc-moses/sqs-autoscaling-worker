AWSTemplateFormatVersion: '2010-09-09'
Description: SQS Worker Stack with Lambda-based ASG auto-scaling

Parameters:
  WorkerScriptBucket:
    Type: String
  WorkerScriptKey:
    Type: String
  SubnetId:
    Type: AWS::EC2::Subnet::Id

Resources:
  WorkerQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: worker-queue

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId:
          Fn::Sub: "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}"
        InstanceType: t2.micro
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum install -y python3 aws-cli
            aws s3 cp s3://${WorkerScriptBucket}/${WorkerScriptKey} /home/ec2-user/worker.py
            QUEUE_URL=$(aws cloudformation describe-stacks --stack-name SQSWorkerStack --query "Stacks[0].Outputs[?OutputKey=='SQSQueueURL'].OutputValue" --output text)
            export QUEUE_URL
            python3 /home/ec2-user/worker.py

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 0
      VPCZoneIdentifier:
        - !Ref SubnetId

  # EventBridge rule to invoke the GitHub-managed Lambda
  SqsWorkerSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      Targets:
        - Arn: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:sqs-worker-lambda
          Id: SqsWorkerTarget

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: sqs-worker-lambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SqsWorkerSchedule.Arn

Outputs:
  SQSQueueURL:
    Value: !Ref WorkerQueue
    Export:
      Name: !Sub "${AWS::StackName}-QueueURL"

  LaunchTemplateId:
    Value: !Ref LaunchTemplate
    Export:
      Name: !Sub "${AWS::StackName}-LaunchTemplateId"

  AutoScalingGroupName:
    Value: !Ref AutoScalingGroup
    Export:
      Name: !Sub "${AWS::StackName}-ASGName"